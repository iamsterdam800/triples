{"version":3,"sources":["Triples.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["Triples","num","this","props","parseInt","T","participants","i","displayName","String","push","sts","t","z","x","y","j","k","L","l1","SN","n1","n2","triples","Array","from","Set","map","ps","p","sort","join","s","split","t1","t2","className","participant","Button","triple","ButtonGroup","pIndex","Component","Form","state","value","isValid","message","numToRender","onChangeNum","e","setState","target","onSubmit","preventDefault","validateForm","formIsValid","n","Number","isSafeInteger","numClasses","classNames","htmlFor","autoFocus","autoComplete","id","type","min","step","pattern","onChange","onBlur","placeholder","App","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3228d355.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ButtonGroup, Button } from 'reactstrap';\n\nclass Triples extends Component {\n\n  render() {\n    const num = this.props.num == null ? null : parseInt( this.props.num );\n\n    if (!num) return <div/>;\n\n    let participants = [];\n    for (let i = 0; i < num; i++) {\n      const displayName = String(i + 1);\n      participants.push( displayName );\n    }\n\n    let T;\n    let sts = [];\n\n    if ( num % 6 === 3 ) {\n      const t = (num - 3) / 6;\n      const z = 2 * t + 1;\n      T = (x, y) => x + z * y;\n\n      for (let i = 0; i < z; i++) {\n        sts.push( [[i, 0], [i, 1], [i, 2]] );\n        for (let j = 0; j < z; j++) {\n          if (i === j) continue;\n          for (let k = 0; k < 3; k++) {\n            sts.push( [[i, k], [j, k], [((t + 1) * (i + j)) % z, (k + 1) % 3]] );\n          }\n        }\n      }\n\n    } else if ( num % 6 === 1 ) {\n      const t = (num - 1) / 6;\n      const z = 2 * t;\n      T = (x, y) => (x !== -1 && y !== -1) ? x + z * y : num - 1;\n\n      const L = (i, j) => {\n        const l1 = (i + j) % z;\n        return (l1 % 2 === 0) ? l1 / 2 : t + (l1 - 1) / 2;\n      };\n\n      for (let i = 0; i < z; i++) {\n        if (i < t) {\n          sts.push([[i, 0], [i, 1], [i, 2]]);\n        } else {\n          for (let k = 0; k < 3; k++) {\n            sts.push([[-1, -1], [i, k], [i - t, (k + 1) % 3]]);\n          }\n        }\n        for (let j = i + 1; j < z; j++) {\n          for (let k = 0; k < 3; k++) {\n            sts.push( [[i, k], [j, k], [L(i, j), (k + 1) % 3]] );\n          }\n        }\n      }\n    }\n\n    const SN = (n1, n2) => n1 - n2;\n    const ST = (t1, t2) => t1[0] !== t2[0] ? t1[0] - t2[0] : t1[1] !== t2[1] ? t1[1] - t2[1] : t1[2] - t2[2];\n\n    const triples = Array.from(new Set(sts.map(ps=>ps.map(p=>T(...p)).sort(SN).join('-'))))\n      .map(s=>s.split('-').map(s=>parseInt(s))).sort(ST);\n\n    return (\n      <div>\n        <p/>\n\n        <h5>Triples for { num } participants</h5>\n\n        <div className=\"flex-wrap\">\n          { participants.map( participant =>\n            <Button>{ participant }</Button>\n          )}\n        </div>\n\n        <p/>\n\n        { triples.map( triple =>\n          <ButtonGroup className=\"mr-2\">\n            { triple.map( pIndex =>\n              <Button>{ participants[pIndex] }</Button>\n            )}\n          </ButtonGroup>\n        )}\n\n      </div>\n    );\n  }\n\n}\n\nexport default Triples;","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Triples from \"./Triples\";\n\nclass Form extends Component {\n  state = {\n    num: {\n      value: '',\n      isValid: true,\n      message: ''\n    },\n    numToRender: null\n  };\n\n  onChangeNum = (e) => {\n    this.setState({ num: { value: e.target.value, isValid: true } });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if ( this.validateForm() ) {\n      this.setState( { numToRender: this.state.num.value } );\n    } else {\n      this.setState( { numToRender: null } );\n    }\n  };\n\n  validateForm = () => {\n    const num = { ...this.state.num };\n    const n = parseInt(num.value);\n    let formIsValid;\n\n    if (\n      !Number.isSafeInteger(n) ||\n      n < 3 ||\n      (\n        n % 6 !== 3 &&\n        n % 6 !== 1\n      )\n    ) {\n      num.isValid = false;\n      num.message = 'Not a valid number of schoolgirls';\n    } else {\n      num.isValid = true;\n      num.message = '';\n    }\n    formIsValid = num.isValid;\n\n    this.setState({ num });\n\n    return formIsValid;\n  };\n\n  render() {\n    const { num } = this.state;\n\n    const numClasses = classNames(\n      'form-control',\n      { 'is-invalid': !num.isValid }\n    );\n\n\n    return (\n      <div>\n        <form onSubmit={ this.onSubmit }>\n          <fieldset>\n\n            <div className=\"form-group\">\n              <label className=\"col-form-label\" htmlFor=\"num\">Number of participants:</label>\n              <div className=\"row-cols-lg-3\">\n                <input\n                  autoFocus\n                  autoComplete=\"off\"\n                  id=\"num\"\n                  type=\"number\"\n                  className={numClasses}\n                  min=\"3\"\n                  step=\"2\"\n                  pattern=\"[0-9]*\"\n                  value={ num.value }\n                  onChange={ this.onChangeNum }\n                  onBlur={ this.validateForm }\n                  placeholder=\"Try 7 or 15 or 3\"\n                />\n              </div>\n              <small>Enter an integer in the form <strong>n*6-1Â±2</strong>. E.g.: 3, 7, 9, 13, 15, 19, 21, etc.</small>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Construct triples</button>\n\n          </fieldset>\n        </form>\n\n        <Triples num={ this.state.numToRender } />\n\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport Form from \"./Form\";\n\nfunction App() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\".\">Triples</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\"\n                aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"https://github.com/iamsterdam800/triples\">GitHub</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <div className=\"container\">\n        <p/>\n        <h3>Triple System Design</h3>\n        <p>This project allows you to construct triples from a set of people, so that each person is included in a triple with every other person only once.</p>\n        <p>One example of it is a <a href=\"https://en.wikipedia.org/wiki/Kirkman%27s_schoolgirl_problem\" target=\"_blank\" rel=\"noopener noreferrer\">Kirkman's schoolgirl problem</a>,\n          where it's required to set up daily walks for 15 schoolgirls in triples so that each schoolgirl would walk with every other schoolgirl exactly once.\n        </p>\n        <p>Another example is setting up a tournament for a <a href=\"https://www.quora.com/What-are-some-fun-games-that-can-be-played-with-3-people\" target=\"_blank\" rel=\"noopener noreferrer\">3-player game</a>,\n          such as: <a href=\"https://en.wikipedia.org/wiki/Preferans\" target=\"_blank\" rel=\"noopener noreferrer\">Preferans</a> and\n          other <a href=\"https://vipspades.com/blog/3-player-card-games/\" target=\"_blank\" rel=\"noopener noreferrer\">card games</a>,\n          multi-player games like <a href=\"https://en.wikipedia.org/wiki/Monopoly_(game)\" target=\"_blank\" rel=\"noopener noreferrer\">Monopoly</a>,\n          or one of <a href=\"https://www.silvergames.com/en/t/3-player\" target=\"_blank\" rel=\"noopener noreferrer\">3-Player online games</a>.\n        </p>\n        <p>Other applications: <a href=\"https://en.wikipedia.org/wiki/Cooperative_learning\" target=\"_blank\" rel=\"noopener noreferrer\">Cooperative learning</a> strategy\n          for increasing interaction within classroom teaching, <a href=\"https://en.wikipedia.org/wiki/Progressive_dinner\" target=\"_blank\" rel=\"noopener noreferrer\">Progressive dinner</a> party\n          designs, <a href=\"https://en.wikipedia.org/wiki/Speed_networking\" target=\"_blank\" rel=\"noopener noreferrer\">Speed Networking</a> events,\n          Sports Competitions.\n        </p>\n\n        <Form/>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootswatch/dist/darkly/bootstrap.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}